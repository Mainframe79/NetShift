name: Build, Sign, and Release NetShift

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  actions: read
  contents: write
  packages: write
  id-token: write

env:
  SIGN_CODE: false # ðŸ”¥ Toggle code signing easily: true or false

jobs:
  build-sign-release:
    runs-on: windows-latest
    env:
      BASE_DIR: ${{ github.workspace }}
      ARTIFACTS_DIR: ${{ github.workspace }}\artifacts
      SolutionPath: ${{ github.workspace }}\NetShift.sln
      SetupPath: ${{ github.workspace }}\NetShiftSetup
      NetShiftBin: ${{ github.workspace }}\NetShift\bin\x64\Release\net8.0-windows\net8.0-windows
      NetShiftExe: ${{ github.workspace }}\NetShift\bin\x64\Release\net8.0-windows\net8.0-windows\NetShift.exe
      NetShiftServiceBin: ${{ github.workspace }}\NetShiftService\bin\x64\Release
      NetShiftServiceExe: ${{ github.workspace }}\NetShiftService\bin\x64\Release\NetShiftService.exe
      NetShiftSetupMsi: ${{ github.workspace }}\NetShiftSetup\bin\Release\NetShiftSetup.msi
      NetShiftInstallerExe: ${{ github.workspace }}\NetShiftSetup\bin\Release\NetShiftInstaller.exe
      WIX_PATH: ${{ github.workspace }}\tools\wix
      RCEDIT_PATH: ${{ github.workspace }}\tools\rcedit\rcedit-x64.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Add WiX tools to PATH
        run: echo "${{ env.WIX_PATH }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Create artifacts directory
        run: New-Item -ItemType Directory -Force -Path "${{ env.ARTIFACTS_DIR }}"
        shell: powershell

      - name: Restore NuGet packages
        run: nuget restore "${{ env.SolutionPath }}"

      - name: Build NetShift project
        run: msbuild NetShift\NetShift.csproj /p:Configuration=Release /p:Platform=x64
        env:
          UseSharedCompilation: false

      - name: Stamp version into NetShift.exe
        run: |
          & "${{ env.RCEDIT_PATH }}" "${{ env.NetShiftExe }}" --set-version-string "ProductVersion" "${{ github.ref_name }}"
          & "${{ env.RCEDIT_PATH }}" "${{ env.NetShiftExe }}" --set-version-string "FileVersion" "${{ github.ref_name }}"
        shell: powershell

      - name: Rebuild NetShift project after stamping
        run: msbuild NetShift\NetShift.csproj /p:Configuration=Release /p:Platform=x64
        env:
          UseSharedCompilation: false

      - name: Conditionally sign NetShift.exe
        if: env.SIGN_CODE == 'true'
        uses: sslcom/esigner-codesign@develop
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ${{ env.NetShiftExe }}
          output_dir_path: ${{ env.ARTIFACTS_DIR }}
          environment_name: PROD
          signing_method: v2
          malware_block: false

      - name: Replace NetShift.exe with signed version
        if: env.SIGN_CODE == 'true'
        run: Copy-Item "${{ env.ARTIFACTS_DIR }}\NetShift.exe" "${{ env.NetShiftExe }}" -Force
        shell: powershell

      - name: Build NetShiftService project
        run: msbuild NetShiftService\NetShiftService.csproj /p:Configuration=Release /p:Platform=x64
        env:
          UseSharedCompilation: false

      - name: Stamp version into NetShiftService.exe
        run: |
          & "${{ env.RCEDIT_PATH }}" "${{ env.NetShiftServiceExe }}" --set-version-string "ProductVersion" "${{ github.ref_name }}"
          & "${{ env.RCEDIT_PATH }}" "${{ env.NetShiftServiceExe }}" --set-version-string "FileVersion" "${{ github.ref_name }}"
        shell: powershell

      - name: Rebuild NetShiftService project after stamping
        run: msbuild NetShiftService\NetShiftService.csproj /p:Configuration=Release /p:Platform=x64
        env:
          UseSharedCompilation: false

      - name: Conditionally sign NetShiftService.exe
        if: env.SIGN_CODE == 'true'
        uses: sslcom/esigner-codesign@develop
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ${{ env.NetShiftServiceExe }}
          output_dir_path: ${{ env.ARTIFACTS_DIR }}
          environment_name: PROD
          signing_method: v2
          malware_block: false

      - name: Replace NetShiftService.exe with signed version
        if: env.SIGN_CODE == 'true'
        run: Copy-Item "${{ env.ARTIFACTS_DIR }}\NetShiftService.exe" "${{ env.NetShiftServiceExe }}" -Force
        shell: powershell

      - name: Copy NetShiftService.exe into Setup directory
        run: Copy-Item "${{ env.NetShiftServiceExe }}" "${{ env.SetupPath }}\NetShiftService.exe" -Force
        shell: powershell

      - name: Run heat.exe to regenerate NetShiftFiles.wxs
        run: |
          $args = @(
            "dir", "${{ github.workspace }}\NetShift\bin\x64\Release",
            "-dr", "APPFOLDER",
            "-cg", "NetShiftFiles",
            "-gg",
            "-scom",
            "-sreg",
            "-srd",
            "-template", "fragment",
            "-out", "${{ env.SetupPath }}\NetShiftFiles.wxs"
          )
          & "${{ env.WIX_PATH }}\heat.exe" @args
        shell: powershell

      - name: Build NetShiftSetup.msi
        run: |
          & "${{ env.WIX_PATH }}\wix.exe" build `
          "${{ env.SetupPath }}\Package.wxs" `
          "${{ env.SetupPath }}\NetShiftFiles.wxs" `
          -o "${{ env.NetShiftSetupMsi }}"
        shell: powershell

      - name: Conditionally sign NetShiftSetup.msi
        if: env.SIGN_CODE == 'true'
        uses: sslcom/esigner-codesign@develop
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ${{ env.NetShiftSetupMsi }}
          output_dir_path: ${{ env.ARTIFACTS_DIR }}
          environment_name: PROD
          signing_method: v2
          malware_block: false

      - name: Replace NetShiftSetup.msi with signed version
        if: env.SIGN_CODE == 'true'
        run: Copy-Item "${{ env.ARTIFACTS_DIR }}\NetShiftSetup.msi" "${{ env.NetShiftSetupMsi }}" -Force
        shell: powershell

      - name: Build NetShiftInstaller.exe
        run: |
          & "${{ env.WIX_PATH }}\wix.exe" build "${{ env.SetupPath }}\Bundle.wxs" -o "${{ env.NetShiftInstallerExe }}"
        shell: powershell

      - name: Conditionally sign NetShiftInstaller.exe
        if: env.SIGN_CODE == 'true'
        uses: sslcom/esigner-codesign@develop
        with:
          command: sign
          username: ${{ secrets.CODESIGN_USERNAME }}
          password: ${{ secrets.CODESIGN_PASSWORD }}
          credential_id: ${{ secrets.CODESIGN_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.CODESIGN_TOTP_SECRET }}
          file_path: ${{ env.NetShiftInstallerExe }}
          output_dir_path: ${{ env.ARTIFACTS_DIR }}
          environment_name: PROD
          signing_method: v2
          malware_block: false

      - name: Replace NetShiftInstaller.exe with signed version
        if: env.SIGN_CODE == 'true'
        run: Copy-Item "${{ env.ARTIFACTS_DIR }}\NetShiftInstaller.exe" "${{ env.NetShiftInstallerExe }}" -Force
        shell: powershell

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NetShift-Installer
          path: |
            ${{ env.NetShiftSetupMsi }}
            ${{ env.NetShiftInstallerExe }}
          retention-days: 7

  release:
    needs: build-sign-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: NetShift-Installer
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/NetShiftSetup.msi
            artifacts/NetShiftInstaller.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
